# Generated by Django 5.1 on 2024-12-22 16:28

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="RoleGroup",
            fields=[
                ("role_group_id", models.AutoField(primary_key=True, serialize=False)),
                ("role_group", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "role_groups",
            },
        ),
        migrations.CreateModel(
            name="Terminal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "terminal_hostname",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("label_rom", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "network_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("roboservice_url", models.URLField(blank=True, null=True)),
                ("opis", models.CharField(blank=True, max_length=255, null=True)),
                ("is_rom", models.BooleanField(default=False)),
                (
                    "delovno_mesto",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("postaja", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "terminals",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=50, unique=True)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("user_role", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "password",
                    models.CharField(default="!", editable=False, max_length=128),
                ),
                ("last_heartbeat", models.DateTimeField(blank=True, null=True)),
                ("is_rezija", models.BooleanField(default=True)),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="ClientToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "device_info",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "terminal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="client_tokens",
                        to="home.terminal",
                    ),
                ),
            ],
            options={
                "db_table": "client_tokens",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("key", models.CharField(max_length=100)),
                ("notification_content", models.TextField()),
                ("reply_content", models.TextField(blank=True, null=True)),
                ("receiver_notified", models.BooleanField(default=False)),
                ("time_sent", models.DateTimeField(auto_now_add=True)),
                ("time_received", models.DateTimeField(blank=True, null=True)),
                ("time_replied", models.DateTimeField(blank=True, null=True)),
                ("notify_response_email", models.BooleanField(default=False)),
                (
                    "receiver_token",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="home.clienttoken",
                    ),
                ),
                (
                    "receiver_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "receiver_terminal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="home.terminal",
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
            },
        ),
        migrations.CreateModel(
            name="NotificationStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("replied", "Replied"),
                        ],
                        default="sent",
                        max_length=50,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "notification",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status",
                        to="home.notification",
                    ),
                ),
            ],
            options={
                "db_table": "notification_statuses",
            },
        ),
        migrations.CreateModel(
            name="ObratiOddelki",
            fields=[
                (
                    "obrati_oddelki_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("obrat", models.CharField(max_length=50)),
                ("oddelek", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "obrati_oddelki",
                "unique_together": {("obrat", "oddelek")},
            },
        ),
        migrations.AddField(
            model_name="user",
            name="obrat_oddelek",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="users_obrat_oddelek",
                to="home.obratioddelki",
            ),
        ),
        migrations.CreateModel(
            name="AplikacijeObratiOddelki",
            fields=[
                (
                    "aplikacije_obrati_oddelki_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("url", models.CharField(max_length=255, unique=True)),
                ("aplikacija", models.CharField(max_length=50)),
                (
                    "type",
                    models.CharField(
                        choices=[("režija", "Režija"), ("proizvodnja", "Proizvodnja")],
                        max_length=50,
                    ),
                ),
                (
                    "obrat_oddelek",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aplikacije_obrat_oddelek",
                        to="home.obratioddelki",
                    ),
                ),
                (
                    "role_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.rolegroup"
                    ),
                ),
            ],
            options={
                "db_table": "aplikacije_obrati_oddelki",
                "unique_together": {("url", "obrat_oddelek")},
            },
        ),
        migrations.CreateModel(
            name="RoleGroupMapping",
            fields=[
                (
                    "role_group_mapping_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("app_role", models.CharField(max_length=50)),
                (
                    "user_role_mapping",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "role_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.rolegroup"
                    ),
                ),
            ],
            options={
                "db_table": "role_group_mappings",
            },
        ),
        migrations.CreateModel(
            name="SignalLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("signal_key", models.CharField(max_length=100)),
                ("limit_value", models.FloatField()),
                (
                    "notification_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "terminal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.terminal"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TerminalMachine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("machine_name", models.CharField(max_length=100)),
                (
                    "terminal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="terminal_machines",
                        to="home.terminal",
                    ),
                ),
            ],
            options={
                "db_table": "terminal_machines",
            },
        ),
        migrations.CreateModel(
            name="UserAppRole",
            fields=[
                (
                    "user_app_roles_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("app_url", models.CharField(blank=True, max_length=255, null=True)),
                ("role_name", models.CharField(max_length=50)),
                (
                    "app_url_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.aplikacijeobratioddelki",
                    ),
                ),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_app_roles",
            },
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="user_groups", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "db_table": "user_groups",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True, related_name="group_members", to="home.usergroup"
            ),
        ),
        migrations.CreateModel(
            name="ObratOddelekGroup",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_obrat_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="obrat_oddelek_groups", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "obrat_oddelek",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="home.obratioddelki",
                    ),
                ),
            ],
            options={
                "db_table": "obrat_oddelek_groups",
                "unique_together": {("name", "obrat_oddelek")},
            },
        ),
        migrations.CreateModel(
            name="Signal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("level", models.CharField(max_length=10)),
                ("message", models.TextField()),
                (
                    "terminal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="signals",
                        to="home.terminal",
                    ),
                ),
            ],
            options={
                "unique_together": {("terminal", "timestamp", "message")},
            },
        ),
        migrations.CreateModel(
            name="OnlineUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("is_terminal", models.BooleanField(default=False)),
                (
                    "sign_in_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("sign_out_time", models.DateTimeField(blank=True, null=True)),
                ("can_receive_notifications", models.BooleanField(default=False)),
                ("last_seen", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "terminal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="home.terminal",
                    ),
                ),
            ],
            options={
                "db_table": "online_users",
                "indexes": [
                    models.Index(
                        fields=["user", "sign_out_time"],
                        name="online_user_user_id_652ea0_idx",
                    ),
                    models.Index(
                        fields=["terminal", "sign_out_time"],
                        name="online_user_termina_0985e2_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["receiver_user", "receiver_notified"],
                name="notificatio_receive_800f03_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["receiver_terminal", "receiver_notified"],
                name="notificatio_receive_2cc93e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="clienttoken",
            index=models.Index(
                fields=["user", "expires_at"], name="client_toke_user_id_1167cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="clienttoken",
            index=models.Index(
                fields=["terminal", "expires_at"], name="client_toke_termina_5000e7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="clienttoken",
            unique_together={("user", "terminal")},
        ),
        migrations.AlterUniqueTogether(
            name="usergroup",
            unique_together={("name", "created_by")},
        ),
    ]
